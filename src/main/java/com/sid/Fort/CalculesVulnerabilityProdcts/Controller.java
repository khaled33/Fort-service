package com.sid.Fort.CalculesVulnerabilityProdcts;

import com.sid.Fort.CalculesVulnerabilityProdcts.Factory.ServiceVulnerabilityProductBankingSector;
import com.sid.Fort.CalculesVulnerabilityProdcts.Factory.ServiceVulnerabilityProductDNFBPsVulnerability;
import com.sid.Fort.Operations.Dao.OperationsRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class Controller {
    @Autowired
    private ServiceVulnerabilityProduct ServiceVulnerabilityProduct;

    @Autowired
    private ServiceVulnerabilityProductBankingSector serviceVulnerabilityProductBankingSector;


    @Autowired
    private ServiceVulnerabilityProductDNFBPsVulnerability serviceVulnerabilityProductDNFBPsVulnerability;


    @Autowired
    private OperationsRepository OperationsRepository;

    @GetMapping("/CalculesVulnerabilityProduct/{id_senario}/Opiration/{id_Opiration}")
    public void CalculesVulnerabilityProduct(@PathVariable Long id_senario, @PathVariable Long id_Opiration) {
//        ServiceVulnerabilityProduct.CalculesVulnerabilityProducts( id_senario,id_Opiration);

        String SectoreType = OperationsRepository.getSectorsByOpirationId(id_Opiration);


        switch (SectoreType) {
            case "Banking Sector":
                serviceVulnerabilityProductBankingSector.CalculesVulnerabilityProducts(id_senario,id_Opiration);
            case "DNFBPs Vulnerability":
                serviceVulnerabilityProductDNFBPsVulnerability.CalculesVulnerabilityProducts(id_senario,id_Opiration);
            case "DNFBPs Vulnerability-Product Based":
                System.out.println("okkk");
                serviceVulnerabilityProductDNFBPsVulnerability.CalculesVulnerabilityProducts(id_senario,id_Opiration);

        }


    }
}
